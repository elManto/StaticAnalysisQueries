//val loop_array_access = cpg.method.controlStructure.parserTypeName("ForStatement").expressionDown.ast.isCall.toSet

var loop_array_access = cpg.method.controlStructure.parserTypeName("ForStatement").expressionDown.ast.isCall.filter(x => x.name.equals("<operator>.indirectIndexAccess")).toSet

//val array_access = cpg.call("<operator>.indirectIndexAccess").toSet

val array_access = cpg.call("<operator>.indirectIndexAccess").where(x => x.argument(2).isIdentifier).toSet

var all_vars = cpg.method.controlStructure.parserTypeName("ForStatement").expressionDown.ast.isIdentifier.toSet

val buffer_iterator_vars = cpg.call("<operator>.indirectIndexAccess").argument(2).isIdentifier.toSet

val real_vars = all_vars.intersect(buffer_iterator_vars).toList

//array_access.diff(loop_array_access).asInstanceOf[Set[Call]].map(elem => (elem.code, elem.lineNumber, elem.reachableBy(vars).code.p))

//array_access.diff(loop_array_access).asInstanceOf[Set[Call]].foreach(elem => println(elem.code, elem.lineNumber, elem.argument(2).reachableBy(real_vars).p))

array_access.diff(loop_array_access).asInstanceOf[Set[Call]].foreach(elem => println(elem.code, elem.reachableBy(real_vars).code.p))
