// The script collects all the divisions and reports all the checks performed over the divisor and the dividend. No checks on the divisor -> High probability to have div by 0

importCpg("cpg.bin")

val divisions = cpg.method.name("<operator>.division").parameter.argument.reachableBy(cpg.identifier).l

val diff_from_zero_checks = cpg.method.name(".*notEquals.*").parameter.argument.reachableBy(divisions).l

//divisions.intersect(diff_from_zero_checks).asInstanceOf[Set[Call]].foreach(elem => println(elem.code))

cpg.method.name("<operator>.division").parameter.argument.foreach(elem => println("division at line", elem.line, "is checked against", elem.reachableBy(diff_from_zero_checks).code.p))
